.second-styles {
  border-size: "unit(--borderWidth, px)";
  color: red;
}

.colors-from-settings {color: "color(--color_from_settings)";}

.fonts-from-settings {font: "font(--fontFromSettings)";}

.font-string-hack {width: "string(--stringHack)";}

.string-default-value {--stringDefaultValue: "string(0px)"; width: "string(--stringDefaultValue)";}

:root {--default_vals: "color(color-4)";}
.default-values {color: "color(--default_vals)";}

:root {--cart_textFontStyle:"font(Body-M)"; --cartButton_textColor:"color(color-1)";}
.no-semicolon {font:"font(--cart_textFontStyle)"; color:"color(--cartButton_textColor)";}

.font-test {font: "font(Body-M)";}

.font-test2 {--some-font: "font(Body-M)"; font: "font(--some-font)";}

.font-test3::after {content: " ";}

.font-test4 {--var: "color(color-2)"; color:"join(opacity(color(color-1), 0.5), 1, opacity(--var, 0.5), 1)";}

.opacity-default-value {rule1: "opacity(--lala, 0.5)"; --lala: "color(color-9)";}

.color-transformation {rule: bar;rule3: baz; rule4: "color(color-1)"; rule5: "color(color(color(color-2)))";}

.darken-transformation {rule1: "darken(color(color-9), 0.5)";}

.without-opacity {rule1: "withoutOpacity(opacity(color(color-9), 0.1))";}

.opacity-with-var {rule1: "opacity(--opacityWithVar, 0.5)";}

.join-colors {rule1: "join(--joinColor, 1, color(color-10), 1)";}

.numbers {width: calc(100% - "number(--numberVar)");}

.unit {border: "unit(--unit_var, px)" solid "color(--unit_color_var)";}

.unit-with-value-zero {border: "unit(--unitZero, px)" solid "color(--unit_zero_color)";}

.not-modify-static-params {padding: 10px 11px 12px 13px; margin-right: 20px; color: blue;}

.not-modify-regular-css-vars {--bar: var(42); --baz: var(21); padding: --baz;}

.datepicker__day--highlighted:hover{background-color: "color(color-1)";}

.no-space-after-colon {rule: bar;rule3:baz;rule4: "color(color-9)";rule5: "color(color(color-9))"}

.font-theme-override {font: "font({theme: 'Body-M', size: '10px', lineHeight: '2em', weight: 'bold', style:'italic'})"}

.font-override-with-var-from-settings {--bodyText: "font({theme: 'Body-M', size: '10px', lineHeight: '2em', weight: bold, style:'italic'})"; font: "font(--bodyText)"}

.font-override-with-var {--bodyText2: "font({theme: 'Body-M', size: '10px', lineHeight: '2em', weight: 'bold', style:'italic'})"; font: "font(--bodyText2)"}

.double-var-reference {--var1:"number(42)"; --var2:"number(--var1)"; rule4:"number(--var2)";}

.undefined-variables {--yfyfdydfy:"font(--undefinedVar)"}

.underlined { font: "font(--underlineVar)" }

.fallback-colors {color: "fallback(color(--none-exist), color(color-1))"}

.first-none-falsy {--first_none_falsy: "color(red)"; color: "fallback(color(--first_none_falsy), color(color-1))"}

.fallback-multiple-vals {color: "fallback(--multi_val1, --multi_val2, color(color-1))";}

.multiple-parts-of-the-same-part {color: "color(color-18)"; background-color: "color(color-18)"};

.whiten {rule1: "whiten(#663898, 0.25)";}

.lighten {rule1: "lighten(color(color-10), 0.15)";}
